metaEnvironment:
    PKG_VERSION: "3.25.2"

checkoutSCM:
    -
        scm: url
        url: ${GITHUB_MIRROR}/Kitware/CMake/archive/v${PKG_VERSION}.zip
        digestSHA1: "de73e59734c0c05e5096026be532733ca95fdfa1"
        dir: cmake.src
    # Since there is unfortunately no possibility to bootstrap cmake like under linux,
    # we must download a pre build binary for windows to build cmake from source.
    -
        scm: url
        url: ${GITHUB_MIRROR}/Kitware/CMake/releases/download/v${PKG_VERSION}/cmake-${PKG_VERSION}-windows-x86_64.zip
        digestSHA1: "371bc690d464d51fc32cbd3a8223dbf4f447862d"
        dir: cmake.bin

multiPackage:
    "":
        inherit: [cmake]

        depends:
            - name: devel::cmake-bootstrap
              use: [tools]

        buildVars: [PKG_VERSION]
        buildScript: |
            cmakeBuild "$($args[0])\cmake.src\CMake-${Env:PKG_VERSION}" `
                       -DCMAKE_BUILD_TYPE=RELEASE

        packageScript: |
            cmakePackageTgt

    bootstrap:
        inherit: [cpackage, ninja, install]

        depends:
            - name: devel::vs2019-toolchain-vc142-amd64
              use: [environment, tools]
            - name: devel::ninja-bootstrap
              use: [tools]

        buildVars: [ PKG_VERSION ]
        buildScript: |

            # Append the path to the prebuild cmake binary
            $Env:PATH="$($args[0])\cmake.bin\cmake-${Env:PKG_VERSION}-windows-x86_64\bin\;$Env:PATH"

            mkdir -Force build >$null
            pushd build

            $SOURCE_PATH = "$($args[0])\cmake.src\CMake-${Env:PKG_VERSION}"

            Check-Command {
                cmake "$SOURCE_PATH" `
                      -GNinja `
                      -DCMAKE_BUILD_TYPE=RELEASE `
                      -DBUILD_SHARED_LIBS=OFF `
                      -DCMAKE_INSTALL_PREFIX="..\install\usr" `
                }

            ninjaParallel -t "all"
            ninjaInstall

            popd

        packageScript: |
            InstallPackageTgt "$($args[0])\install"

provideTools:
    cmake: usr/bin