inherit: [msbuild]

metaEnvironment:
    PYTHON_VERSION:     "3.11.6"
    GET_PIP_VERSION:    "23.3.1"
    PIP_VERSION:        "23.3.1"
    SETUPTOOLS_VERSION: "69.0.2"
    WHEEL_VERSION:      "0.42.0"

depends:
    - name: devel::vs2019-toolchain-vc142-amd64
      use: [environment, tools]
      forward: true
    - name: python::pipython3-minimal
      use: [tools]

checkoutSCM:
    -
        scm: url
        url: ${PYTHON_MIRROR}/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz
        digestSHA256: 0fab78fa7f133f4f38210c6260d90d7c0d5c7198446419ce057ec7ac2e6f5f38
        extract: no
        dir: python
    -
        scm: url
        url: ${GITHUB_MIRROR}/pypa/get-pip/archive/refs/tags/${GET_PIP_VERSION}.zip
        digestSHA256: 369b52b1140e22ecf05ff699124d565c5754dd156e9ba0d98c2dce8af167b73b
        dir: get-pip
    # Fetching external libraries...
    -
        scm: url
        url: ${GITHUB_MIRROR}/python/cpython-source-deps/archive/bzip2-1.0.8.zip
        digestSHA256: 12c17d15f99e27235529574a722fb484a4e8fdf2427cef53b1b68bdf07e404a9
        extract: no
        dir: deps/bzip2
    -
        scm: url
        url: ${GITHUB_MIRROR}/python/cpython-source-deps/archive/sqlite-3.42.0.0.zip
        digestSHA256: 8b1c68e8f21be7016b0e67f91d7972281b118dcd591fd8580f001e92675a7108
        extract: no
        dir: deps/sqlite
    -
        scm: url
        url: ${GITHUB_MIRROR}/python/cpython-source-deps/archive/xz-5.2.5.zip
        digestSHA256: 6a4389cc05143beb2679b1299cecee71b02baa55e70f68a88b44dc01ad495424
        extract: no
        dir: deps/xz
    -
        scm: url
        url: ${GITHUB_MIRROR}/python/cpython-source-deps/archive/zlib-1.2.13.zip
        digestSHA256: 93f286fefc44d971dbe865c59d6c61bb9cf429ca6607eb0604b0a5dae33d9486
        extract: no
        dir: deps/zlib
    # Fetching external binaries...
    -
        scm: url
        url: ${GITHUB_MIRROR}/python/cpython-bin-deps/archive/libffi-3.4.4.zip
        digestSHA256: 681c0e6306b4bcb54ecce8305f67ca88ab03be922b6c4dcfd18240ad46e357d8
        extract: no
        dir: deps/libffi
    -
        scm: url
        url: ${GITHUB_MIRROR}/python/cpython-bin-deps/archive/openssl-bin-3.0.11.zip
        digestSHA256: a7f00e8d7023ad8565087bd45520d736cd1211d77875f100c3cf232bea56db8f
        extract: no
        dir: deps/openssl-bin
    -
        scm: url
        url: ${GITHUB_MIRROR}/python/cpython-bin-deps/archive/tcltk-8.6.12.1.zip
        digestSHA256: ddf39230b49b5751a2e899cf30623f2d618ac5b9cb863578f827132a53d3c001
        extract: no
        dir: deps/tcltk

checkoutTools: [7z]
checkoutVars: [PYTHON_VERSION, PIP_VERSION, SETUPTOOLS_VERSION, WHEEL_VERSION, GET_PIP_VERSION]
checkoutDeterministic: True
checkoutScript: |
    pushd python
    Check-Command { 7z x -y Python-${Env:PYTHON_VERSION}.tar.xz }
    Check-Command { 7z x -y Python-${Env:PYTHON_VERSION}.tar }
    # because 7zip does not support strip
    pushd Python-${Env:PYTHON_VERSION}
    robocopy . .. /S /IM /NFL /NDL /NJH /NJS /nc /ns
    popd
    rm -Force -r Python-${Env:PYTHON_VERSION}

buildTools: [python3]
buildVars: [MSB_PATH]
buildScript: |
    $SRC_PATH="$($args[0])"

    ########################################################################
    # Private helper function
    ########################################################################

    function __addLib
    {
        Param(
            # mandatory
            [Parameter(Position = 0)]
            [String]$DEP,
            [Parameter(Position = 1)]
            [String]$VER
        )

        pushd src/externals
        Check-Command { 7z x -y $SRC_PATH/deps/$DEP/$DEP-$VER.zip }
        Rename-Item cpython-source-deps-$DEP-$VER $DEP-$VER
        popd
    }

    function __addBin
    {
        Param(
            # mandatory
            [Parameter(Position = 0)]
            [String]$DEP,
            [Parameter(Position = 1)]
            [String]$VER
        )

        pushd src/externals
        Check-Command { 7z x -y $SRC_PATH/deps/$DEP/$DEP-$VER.zip }
        Rename-Item cpython-bin-deps-$DEP-$VER $DEP-$VER
        popd
    }

    ########################################################################
    # Build Python
    ########################################################################

    mkdir -Force -p $("src", "src/externals") >$null
    cp -Exclude "*.tar.xz*" -Force -r "${SRC_PATH}/python/*" src

    $env:MSBUILD=${Env:MSB_PATH}
    $env:HOST_PYTHON=$(Get-Command python3).Path

    # copy dependencies
    __addLib "bzip2"       "1.0.8"
    __addLib "sqlite"      "3.42.0.0"
    __addLib "xz"          "5.2.5"
    __addLib "zlib"        "1.2.13"
    __addBin "libffi"      "3.4.4"
    __addBin "openssl-bin" "3.0.11"
    __addBin "tcltk"       "8.6.12.1"

    Check-Command { src/PCbuild/build.bat -p x64 }

    $installdir="src/PCbuild/amd64"

    mkdir -p @("install/usr/bin", "install/Lib", "install/usr/include") >$null
    cp -Exclude "*.lib" -Force -r $installdir/* install/usr/bin/
    cp -Include "*.lib" -Force -r $installdir/* install/Lib/
    cp install/usr/bin/python.exe install/usr/bin/python3.exe
    cp -Force -r src/Lib/* install/Lib/
    cp -Force -r src/Include/* install/usr/include/
    cp -Include @("*.h", "*/") -Force -r src/PC/* install/usr/include/

    # install pip, setuptools and wheel into the current environment
    ./install/usr/bin/python.exe $SRC_PATH/get-pip/get-pip-${Env:GET_PIP_VERSION}/public/get-pip.py `
            "pip == ${Env:PIP_VERSION}" `
            "setuptools == ${Env:SETUPTOOLS_VERSION}" `
            "wheel == ${Env:WHEEL_VERSION}" `
            --root "$PWD/install" `
            --prefix usr

packageScript: |
    cp -Force -r "$($args[0])/install/*" .

provideTools:
    python3:
        path: usr/bin
        # because we do not use the default stdLib directory "lib"
        libs: ["usr/lib"]
        netAccess: True
        environment:
            # the python platform library require this environment variable
            PROCESSOR_ARCHITECTURE: "${PROCESSOR_ARCHITECTURE}"
