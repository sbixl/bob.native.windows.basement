depends:
    - name: utils::patch
      use: [environment]

checkoutVarsWeak: [PATCH_PATH]
checkoutDeterministic: True
checkoutScript: |
    function patchApplySeries
    {
        Param(
            # mandatory
            [Parameter(Position = 0, mandatory=$true)]
            [String[]]$PATCH_FILES=@(""),
            [Parameter(Position = 1)]
            [String]$STRIP_NUMBER_OF_SLASHES=1
        )

         ${Env:PATH}+=";${Env:PATCH_PATH}"

        if(Test-Path patches.applied)
        {
            # Remove old patch
            for ( $i = 0; $i -lt $PATCH_FILES.count; $i++ )
            {
                Check-Command {
                    patch -p ${STRIP_NUMBER_OF_SLASHES} -R -i $PATCH_FILES[$i] -s
                }
            }
            rm patches.applied
        }

        for ( $i = 0; $i -lt $PATCH_FILES.count; $i++ )
        {
            Check-Command {
                patch -p $STRIP_NUMBER_OF_SLASHES -i $PATCH_FILES[$i]
            }
        }
        echo patched > patches.applied
    }
